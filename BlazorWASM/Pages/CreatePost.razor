@page "/CreatePost"
@attribute [Authorize]
@using HttpClients.ClientInterfaces
@using Domain.DTOs
<h3>CreatePost</h3>
@inject IPostService postService
<div class="card">
    <h3>Create Post</h3>
    <div class="form-group field">
        <label>Post Title:</label>
        <input type="text" @bind="title" @bind:event="oninput"/>
        <label>Post body:</label>
        <input type="text" @bind="body" @bind:event="oninput"/>
        @if (!string.IsNullOrEmpty(resultMsg))
        {
            <label style="color: @color">@resultMsg</label>
        }
    </div>
    <div class="button-row">
        <button @onclick="Create" disabled="@(string.IsNullOrEmpty(title))" class="acceptbtn">Create</button>
    </div>
</div>
@code {
    private string title = "";
    private string body = "";
    private string resultMsg = "";
    private string color = "";
    
    private async Task Create()
    {
        resultMsg = "";

        try
        {
            await postService.Create(new NewPostDTO(title,body));
            title = "";
            body = " ";
            resultMsg = "Post successfully created";
            color = "green";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            resultMsg = e.Message;
            color = "red";
        }
    }
}